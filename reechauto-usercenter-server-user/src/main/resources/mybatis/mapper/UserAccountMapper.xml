<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.reechauto.usercenter.user.mapper.UserAccountMapper">
    <resultMap id="BaseResultMap" type="com.reechauto.usercenter.user.entity.UserAccount">
        <id column="account_num" jdbcType="VARCHAR" property="accountNum" />
        <result column="account_type" jdbcType="VARCHAR" property="accountType" />
        <result column="account_from" jdbcType="VARCHAR" property="accountFrom" />
        <result column="pid" jdbcType="VARCHAR" property="pid" />
        <result column="user_id" jdbcType="BIGINT" property="userId" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        account_num, account_type, account_from, pid, user_id, create_time
    </sql>
    <select id="selectByExample" parameterType="com.reechauto.usercenter.user.entity.UserAccountExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List" />
        from user_account
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart != null and limitStart>=0">
            limit #{limitStart} , #{offset}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from user_account
        where account_num = #{accountNum,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from user_account
        where account_num = #{accountNum,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.reechauto.usercenter.user.entity.UserAccountExample">
        delete from user_account
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.reechauto.usercenter.user.entity.UserAccount">
        insert into user_account (account_num, account_type, account_from, 
            pid, user_id, create_time
            )
        values (#{accountNum,jdbcType=VARCHAR}, #{accountType,jdbcType=VARCHAR}, #{accountFrom,jdbcType=VARCHAR}, 
            #{pid,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}
            )
    </insert>
    <insert id="insertSelective" parameterType="com.reechauto.usercenter.user.entity.UserAccount">
        insert into user_account
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accountNum != null">
                account_num,
            </if>
            <if test="accountType != null">
                account_type,
            </if>
            <if test="accountFrom != null">
                account_from,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="accountNum != null">
                #{accountNum,jdbcType=VARCHAR},
            </if>
            <if test="accountType != null">
                #{accountType,jdbcType=VARCHAR},
            </if>
            <if test="accountFrom != null">
                #{accountFrom,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.reechauto.usercenter.user.entity.UserAccountExample" resultType="java.lang.Long">
        select count(*) from user_account
        <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update user_account
        <set>
            <if test="record.accountNum != null">
                account_num = #{record.accountNum,jdbcType=VARCHAR},
            </if>
            <if test="record.accountType != null">
                account_type = #{record.accountType,jdbcType=VARCHAR},
            </if>
            <if test="record.accountFrom != null">
                account_from = #{record.accountFrom,jdbcType=VARCHAR},
            </if>
            <if test="record.pid != null">
                pid = #{record.pid,jdbcType=VARCHAR},
            </if>
            <if test="record.userId != null">
                user_id = #{record.userId,jdbcType=BIGINT},
            </if>
            <if test="record.createTime != null">
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update user_account
        set account_num = #{record.accountNum,jdbcType=VARCHAR},
            account_type = #{record.accountType,jdbcType=VARCHAR},
            account_from = #{record.accountFrom,jdbcType=VARCHAR},
            pid = #{record.pid,jdbcType=VARCHAR},
            user_id = #{record.userId,jdbcType=BIGINT},
            create_time = #{record.createTime,jdbcType=TIMESTAMP}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.reechauto.usercenter.user.entity.UserAccount">
        update user_account
        <set>
            <if test="accountType != null">
                account_type = #{accountType,jdbcType=VARCHAR},
            </if>
            <if test="accountFrom != null">
                account_from = #{accountFrom,jdbcType=VARCHAR},
            </if>
            <if test="pid != null">
                pid = #{pid,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where account_num = #{accountNum,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.reechauto.usercenter.user.entity.UserAccount">
        update user_account
        set account_type = #{accountType,jdbcType=VARCHAR},
            account_from = #{accountFrom,jdbcType=VARCHAR},
            pid = #{pid,jdbcType=VARCHAR},
            user_id = #{userId,jdbcType=BIGINT},
            create_time = #{createTime,jdbcType=TIMESTAMP}
        where account_num = #{accountNum,jdbcType=VARCHAR}
    </update>
</mapper>